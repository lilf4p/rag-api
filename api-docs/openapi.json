{
	"openapi": "3.1.0",
	"info": {
		"title": "Industry 5.0 RESTful API",
		"description": "\n## Documentation\n\nThe API is a RESTful web service that provides access to the data stored in the database and integrates KPI Engine, Anomaly Detection and RAG features. The API is built using FastAPI, a modern Python web framework that provides automatic generation of OpenAPI documentation. The API is hosted on Google Cloud Run and is available at `https://<base_url>/api/<api-version>`. The API version is specified in the URL and should be one of the following values: `v1.0`. The latest version of the API is `v1.0`. The API is secured using firebase authentication and authorization, and the user must provide a valid JWT token in the `Authorization` header to access the endpoints. Https is enforced for all requests to the API from Cloud Run.\n\nThe <base_url> will be provided by the project maintainers to who is interested in using the API.\n\nThe API documentation is available at `https://<base_url>/api/<api-version>/docs` as a Swagger UI interface. The documentation provides information about the available endpoints, request and response formats, and examples. For an alternative view, the API documentation is also available at `https://<base_url>/api/<api-version>/redoc`. The documentation is automatically generated by FastAPI based on the code and docstrings.\n\n## Plugins\nThe API is organized in plugins, each containing a set of endpoints related to a specific functionality. The available plugins are:\n- `kpi`: Key Performance Indicators\n- `machine`: Machines query\n- `user`: Users interaction\n- `chat`: Chat interaction\n- `site`: Sites query\n- `report`: Reports query\n- `auth`: Authentication and Authorization\n\n## Local Development\nOne can always run the API locally for development purposes.\n### Installation\nTo install locally the API, clone the repository and install the dependencies using pip:\n```bash\ngit clone https://github.com/sa-team-d/api.git\ncd api\npip install -r requirements.txt\n```\n### Usage\nTo start the API locally, run the following command:\n```bash\nuvicorn main:app --reload\n```\nor use the FastAPI command for development:\n```bash\nfastapi dev main.py\n```\nThe API will be available at `http://localhost:8000/api/<api-version>`.\n\n## Contact\nFor any questions or issues, please contact the project maintainers:\n- [Leonardo Stoppani](https://github.com/lilf4p)\n- [Oleksiy Nedobiychuk](https://github.com/lesi-nedo)\n",
		"version": "v1.0"
	},
	"paths": {
		"/": {
			"get": {
				"summary": "Redirect to Swagger docs",
				"operationId": "redirect_to_docs__get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				}
			}
		},
		"/docs": {
			"get": {
				"summary": "Redirect to Swagger docs",
				"operationId": "redirect_to_docs_docs_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				}
			}
		},
		"/redoc": {
			"get": {
				"summary": "Redirect to ReDoc docs",
				"operationId": "redirect_to_redoc_redoc_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				}
			}
		},
		"/health/mongodb": {
			"get": {
				"summary": "Check MongoDB connection",
				"operationId": "check_mongodb_connection_health_mongodb_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				}
			}
		},
		"/mongodb/list_all_data": {
			"get": {
				"summary": "List all data in MongoDB",
				"operationId": "list_all_data_mongodb_list_all_data_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"text/html": {
								"schema": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1.0/machine/": {
			"get": {
				"tags": [
					"Machine"
				],
				"summary": "Get all machines in the dataset",
				"description": "Get all machines in the dataset\n\nReturns:\n- MachineResponse: A response object containing the list of machines",
				"operationId": "get_all_machines_api_v1_0_machine__get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MachineResponse"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1.0/machine/filter": {
			"get": {
				"tags": [
					"Machine"
				],
				"summary": "Filter machines by type or name",
				"description": "Filter machines by type or name\n\nArgs:\n- machine_name: The name of the machine to filter by\n- machine_type: The type of the machine to filter by\n\nReturns:\n- MachineResponse: A response object containing the list of machines that match the filter",
				"operationId": "filter_machines_api_v1_0_machine_filter_get",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "machine_name",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Machine Name"
						}
					},
					{
						"name": "machine_type",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Machine Type"
						}
					}
				],
				"responses": {
					"201": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MachineResponse"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1.0/machine/{machine_id}": {
			"get": {
				"tags": [
					"Machine"
				],
				"summary": "Get machine by ID",
				"description": "Get machine by ID\n\nArgs:\n- machine_id: The ID of the machine to retrieve\n\nReturns:\n- MachineResponse: A response object containing the machine",
				"operationId": "get_machine_by_id_api_v1_0_machine__machine_id__get",
				"parameters": [
					{
						"name": "machine_id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Machine Id"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MachineResponse"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1.0/user/login": {
			"post": {
				"tags": [
					"User"
				],
				"summary": "TEST ONLY: Simulate frontend login",
				"description": "Authenticate user and get firebase ID token",
				"operationId": "login_api_v1_0_user_login_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserLogin"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserResponse"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1.0/user/": {
			"post": {
				"tags": [
					"User"
				],
				"summary": "Create a new user",
				"description": "Create a new user.\n\nArgs:\n    name (str): User's name.\n    phone_number (str): User's phone number.\n    email (str): User's email.\n    site (str): User's site.\n    user (User): Current user.\n\nReturns:\n    UserResponse: Response object containing user info.",
				"operationId": "create_user_api_v1_0_user__post",
				"parameters": [
					{
						"name": "name",
						"in": "query",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Name"
						}
					},
					{
						"name": "phone_number",
						"in": "query",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Phone Number"
						}
					},
					{
						"name": "email",
						"in": "query",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Email"
						}
					},
					{
						"name": "site",
						"in": "query",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Site"
						}
					},
					{
						"name": "required_role",
						"in": "query",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Required Role"
						}
					}
				],
				"responses": {
					"201": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"get": {
				"tags": [
					"User"
				],
				"summary": "Get current user",
				"description": "Get current user.\n\nArgs:\n    user (User): Current user.\n\nReturns:\n    UserResponse: Response object containing user info.",
				"operationId": "get_current_user_api_v1_0_user__get",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserResponse"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1.0/user/{user_id}": {
			"delete": {
				"tags": [
					"User"
				],
				"summary": "Delete a user",
				"description": "Delete a user.\n\nArgs:\n    user_id (str): User ID.\n    user (User): Current user.\n\nReturns:\n    UserResponse: Response object containing user info.",
				"operationId": "delete_user_api_v1_0_user__user_id__delete",
				"parameters": [
					{
						"name": "user_id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "User Id"
						}
					},
					{
						"name": "required_role",
						"in": "query",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Required Role"
						}
					}
				],
				"responses": {
					"204": {
						"description": "Successful Response"
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"put": {
				"tags": [
					"User"
				],
				"summary": "Update user info",
				"description": "Update user info.\n\nArgs:\n    user_id (str): User ID.\n    name (str): User's name.\n    phone_number (str): User's phone number.\n    email (str): User's email.\n    site (str): User's site.\n    user (User): Current user.\n\nReturns:\n    UserResponse: Response object containing user info.",
				"operationId": "update_user_api_v1_0_user__user_id__put",
				"parameters": [
					{
						"name": "user_id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "User Id"
						}
					},
					{
						"name": "name",
						"in": "query",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Name"
						}
					},
					{
						"name": "phone_number",
						"in": "query",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Phone Number"
						}
					},
					{
						"name": "email",
						"in": "query",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Email"
						}
					},
					{
						"name": "site",
						"in": "query",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Site"
						}
					},
					{
						"name": "required_role",
						"in": "query",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Required Role"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1.0/user/list": {
			"get": {
				"tags": [
					"User"
				],
				"summary": "List all users",
				"description": "List all users.\n\nArgs:\n    user (User): Current user.\n\nReturns:\n    UserResponse: Response object containing user info.",
				"operationId": "list_users_api_v1_0_user_list_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserResponse"
								}
							}
						}
					}
				},
				"security": [
					{
						"HTTPBearer": []
					}
				]
			}
		},
		"/api/v1.0/user/filter": {
			"get": {
				"tags": [
					"User"
				],
				"summary": "Filter users by name or email",
				"description": "Filter users by name or email.\n\nArgs:\n    first_name (str): User's first name.\n    last_name (str): User's last name.\n    email (str): User's email.\n    user (User): Current user.\n\nReturns:\n    UserResponse: Response object containing user info",
				"operationId": "filter_users_api_v1_0_user_filter_get",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "first_name",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"title": "First Name"
						}
					},
					{
						"name": "last_name",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Last Name"
						}
					},
					{
						"name": "email",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Email"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserResponse"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1.0/user/:uid": {
			"get": {
				"tags": [
					"User"
				],
				"summary": "Get user by ID",
				"description": "Get user by ID.\n\nArgs:\n    uid (str): User ID.\n    user (User): Current user.\n\nReturns:\n    UserResponse: Response object containing user info.",
				"operationId": "get_user_by_id_api_v1_0_user__uid_get",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "uid",
						"in": "query",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Uid"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserResponse"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1.0/kpi/{id}": {
			"get": {
				"tags": [
					"Kpi"
				],
				"summary": "Get kpi by id",
				"description": "Get a KPI by ID.\n\nArgs:\n    id (str): The ID of the KPI.\n    user: The authenticated user, obtained via dependency injection.\n\nReturns:\n    KPIResponse: The response containing the success status, data, and message.",
				"operationId": "getKPIById_api_v1_0_kpi__id__get",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/KPIResponse"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"delete": {
				"tags": [
					"Kpi"
				],
				"summary": "Delete kpi",
				"description": "Delete a KPI by ID.\n\nArgs:\n    id (str): The ID of the KPI to delete.\n    user: The authenticated user, obtained via dependency injection.\n\nReturns:\n    KPIResponse: The response containing the success status, data, and message.",
				"operationId": "deleteKPI_api_v1_0_kpi__id__delete",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Id"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/KPIResponse"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1.0/kpi/machine/{machine_id}/compute": {
			"get": {
				"tags": [
					"Kpi"
				],
				"summary": "Compute the kpi value associated to machine",
				"description": "Compute the KPI value associated with a specific machine.\n\nArgs:\n    machine_id (str): The ID of the machine.\n    kpi_id (str): The ID of the KPI to compute.\n    start_date (str): The start date for KPI computation in \"%Y-%m-%d %H:%M:%S\" format.\n    end_date (str): The end date for KPI computation in \"%Y-%m-%d %H:%M:%S\" format.\n    granularity_op (str): The granularity operation.\n    granularity_days (Optional[int], optional): The number of days for granularity. Defaults to None.\n    user: The authenticated user, obtained via dependency injection.\n\nReturns:\n    KPIResponse: The response containing the success status, data, and message.",
				"operationId": "computeKPIByMachine_api_v1_0_kpi_machine__machine_id__compute_get",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "machine_id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Machine Id"
						}
					},
					{
						"name": "kpi_id",
						"in": "query",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Kpi Id"
						}
					},
					{
						"name": "start_date",
						"in": "query",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Start Date"
						}
					},
					{
						"name": "end_date",
						"in": "query",
						"required": true,
						"schema": {
							"type": "string",
							"title": "End Date"
						}
					},
					{
						"name": "granularity_op",
						"in": "query",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Granularity Op"
						}
					},
					{
						"name": "granularity_days",
						"in": "query",
						"required": false,
						"schema": {
							"anyOf": [
								{
									"type": "integer"
								},
								{
									"type": "null"
								}
							],
							"title": "Granularity Days"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/KPIResponse"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1.0/kpi/site/{site_id}/compute": {
			"get": {
				"tags": [
					"Kpi"
				],
				"summary": "Compute the value of the kpi associated to site",
				"description": "Compute the KPI value associated with a specific site.\n\nArgs:\n    site_id (int): The ID of the site.\n    kpi_id (str): The ID of the KPI to compute.\n    start_date (str): The start date for KPI computation in \"%Y-%m-%d %H:%M:%S\" format.\n    end_date (str): The end date for KPI computation in \"%Y-%m-%d %H:%M:%S\" format.\n    granularity_op (str): The granularity operation.\n    granularity_days (Optional[int], optional): The number of days for granularity. Defaults to None.\n    category (Optional[str], optional): The category of the KPI. Defaults to None.\n    user: The authenticated user, obtained via dependency injection.\n\nReturns:\n    KPIResponse: The response containing the success status, data, and message.",
				"operationId": "computeKPIBySite_api_v1_0_kpi_site__site_id__compute_get",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "site_id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"title": "Site Id"
						}
					},
					{
						"name": "kpi_id",
						"in": "query",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Kpi Id"
						}
					},
					{
						"name": "start_date",
						"in": "query",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Start Date"
						}
					},
					{
						"name": "end_date",
						"in": "query",
						"required": true,
						"schema": {
							"type": "string",
							"title": "End Date"
						}
					},
					{
						"name": "granularity_op",
						"in": "query",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Granularity Op"
						}
					},
					{
						"name": "granularity_days",
						"in": "query",
						"required": false,
						"schema": {
							"anyOf": [
								{
									"type": "integer"
								},
								{
									"type": "null"
								}
							],
							"title": "Granularity Days"
						}
					},
					{
						"name": "category",
						"in": "query",
						"required": false,
						"schema": {
							"anyOf": [
								{
									"type": "string"
								},
								{
									"type": "null"
								}
							],
							"title": "Category"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/KPIResponse"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1.0/kpi/site/{site_id}/report": {
			"get": {
				"tags": [
					"Kpi"
				],
				"summary": "Compute the value of the kpi associated to site",
				"description": "Compute the KPI value associated with a specific site for report.\n\nArgs:\n    site_id (int): The ID of the site.\n    start_date (str): The start date for KPI computation in \"%Y-%m-%d %H:%M:%S\" format.\n    end_date (str): The end date for KPI computation in \"%Y-%m-%d %H:%M:%S\" format.\n    granularity_op (str): The granularity operation.\n    user: The authenticated user, obtained via dependency injection.\n\nReturns:\n    ReportResponse: The response containing the success status, data, and message.",
				"operationId": "computeKPIForReport_api_v1_0_kpi_site__site_id__report_get",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "site_id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"title": "Site Id"
						}
					},
					{
						"name": "start_date",
						"in": "query",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Start Date"
						}
					},
					{
						"name": "end_date",
						"in": "query",
						"required": true,
						"schema": {
							"type": "string",
							"title": "End Date"
						}
					},
					{
						"name": "granularity_op",
						"in": "query",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Granularity Op"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/RowReportResponse"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1.0/kpi/": {
			"get": {
				"tags": [
					"Kpi"
				],
				"summary": "List kpis",
				"description": "List all KPIs.\n\nArgs:\n    site (int): The ID of the site.\n    user: The authenticated user, obtained via dependency injection.\n\nReturns:\n    KPIResponse: The response containing the success status, data, and message.",
				"operationId": "listKPI_api_v1_0_kpi__get",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "site",
						"in": "query",
						"required": true,
						"schema": {
							"type": "integer",
							"title": "Site"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/KPIResponse"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"Kpi"
				],
				"summary": "Create kpi",
				"description": "Create a new KPI.\n\nArgs:\n    item (CreateKPIBody): The KPI details.\n    user: The authenticated user, obtained via dependency injection.\n\nReturns:\n    KPIResponse: The response containing the success status, data, and message.",
				"operationId": "createKPI_api_v1_0_kpi__post",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateKPIBody"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/KPIResponse"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1.0/kpi/name/{name}": {
			"get": {
				"tags": [
					"Kpi"
				],
				"summary": "Get kpi by name",
				"description": "Get a KPI by name.\n\nArgs:\n    name (str): The name of the KPI.\n    user: The authenticated user, obtained via dependency injection.\n\nReturns:\n    KPIResponse: The response containing the success status, data, and message.",
				"operationId": "getKPIByName_api_v1_0_kpi_name__name__get",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Name"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/KPIResponse"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"delete": {
				"tags": [
					"Kpi"
				],
				"summary": "Delete kpi by name",
				"description": "Delete a KPI by name.\n\nArgs:\n    name (str): The name of the KPI.\n    user: The authenticated user, obtained via dependency injection.\n\nReturns:\n    KPIResponse: The response containing the success status, data, and message.",
				"operationId": "deleteKPIByName_api_v1_0_kpi_name__name__delete",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Name"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/KPIResponse"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1.0/site/{id}": {
			"get": {
				"tags": [
					"Site"
				],
				"summary": "Get site by id",
				"description": "Get site by id\n\nArgs:\n- id: int: site id\n\nReturns:\n- SiteResponse: site response object with the site content",
				"operationId": "getSiteById_api_v1_0_site__id__get",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"title": "Id"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SiteResponse"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1.0/site/{id}/associate": {
			"get": {
				"tags": [
					"Site"
				],
				"summary": "Associate kpi to site",
				"description": "Associate kpi to site\n\nArgs:\n- id: int: site id\n- kpi_id: str: kpi id\n\nReturns:\n- SiteResponse: site response object with site content",
				"operationId": "getSiteById_api_v1_0_site__id__associate_get",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"title": "Id"
						}
					},
					{
						"name": "kpi_id",
						"in": "query",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Kpi Id"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SiteResponse"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1.0/report/": {
			"post": {
				"tags": [
					"Report"
				],
				"summary": "Create a new report, save it to the database and return the PDF URL to download it",
				"description": "Create a new report, save it to the database and return the PDF URL to download it\n\nArgs:\n- name: the name of the report\n- site: the site for which the report is created\n- kpi_names: the names of the KPIs to include in the report\n- start_date: the start date for the report\n- end_date: the end date for the report\n- user: the user creating the report\n- operation: the operation to perform on the KPIs (sum, avg, min, max)\n\nReturns:\n- PDF URL to download the report",
				"operationId": "create_report_api_v1_0_report__post",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "name",
						"in": "query",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Name"
						}
					},
					{
						"name": "site",
						"in": "query",
						"required": true,
						"schema": {
							"type": "integer",
							"title": "Site"
						}
					},
					{
						"name": "kpi_names",
						"in": "query",
						"required": false,
						"schema": {
							"anyOf": [
								{
									"type": "array",
									"items": {
										"type": "string"
									}
								},
								{
									"type": "null"
								}
							],
							"title": "Kpi Names"
						}
					},
					{
						"name": "start_date",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"default": "2024-09-30 00:00:00",
							"title": "Start Date"
						}
					},
					{
						"name": "end_date",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"default": "2024-10-14 00:00:00",
							"title": "End Date"
						}
					},
					{
						"name": "operation",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"default": "avg",
							"title": "Operation"
						}
					}
				],
				"responses": {
					"201": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			},
			"get": {
				"tags": [
					"Report"
				],
				"summary": "Get all reports created by the user",
				"description": "Get all reports created by the user\n\nArgs:\n- user: the user creating the report\n\nReturns:\n- List of reports created by the user",
				"operationId": "get_all_reports_api_v1_0_report__get",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ReportResponse"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1.0/report/filter": {
			"get": {
				"tags": [
					"Report"
				],
				"summary": "Get all reports for a specific site created by the logged user",
				"description": "Get all reports for a specific site created by the logged user\n\nArgs:\n- site_id: the site ID to filter the reports\n- name: the name of the report to filter\n\nReturns:\n- List of reports for the site",
				"operationId": "get_reports_by_site_id_api_v1_0_report_filter_get",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "site_id",
						"in": "query",
						"required": false,
						"schema": {
							"type": "integer",
							"title": "Site Id"
						}
					},
					{
						"name": "name",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Name"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ReportResponse"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1.0/report/{report_id}": {
			"delete": {
				"tags": [
					"Report"
				],
				"summary": "Delete a report by ID",
				"description": "Delete a report by ID\n\nArgs:\n- report_id: the ID of the report to delete\n- user: the user deleting the report\n\nReturns:\n- Success message if the report is deleted",
				"operationId": "delete_report_api_v1_0_report__report_id__delete",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "report_id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Report Id"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ReportResponse"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1.0/chat/": {
			"post": {
				"tags": [
					"Chat"
				],
				"summary": "Get chat response",
				"description": "This endpoint is used to get a response from the chatbot based on the query provided.\n\nArgs:\n- site_id: int - The site id\n- query: str - The query to send to the chatbot\n\nReturns:\n- str: The response from the chatbot",
				"operationId": "getChatResponse_api_v1_0_chat__post",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "site_id",
						"in": "query",
						"required": true,
						"schema": {
							"type": "integer",
							"title": "Site Id"
						}
					},
					{
						"name": "query",
						"in": "query",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Query"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1.0/anomalies/": {
			"post": {
				"tags": [
					"Anomalies"
				],
				"summary": "Get all anomalies",
				"description": "Get all anomalies for the specified KPIs.\nArgs:\n- anomaly_type (list[str]): The type of anomaly to get. Default is 'energy'.\nReturns:\n- AnomalyResponse: Anomaly response object containing total anomalies and anomalies by machine category.",
				"operationId": "getAnomalies_api_v1_0_anomalies__post",
				"security": [
					{
						"HTTPBearer": []
					}
				],
				"parameters": [
					{
						"name": "anomaly_type",
						"in": "query",
						"required": false,
						"schema": {
							"anyOf": [
								{
									"type": "array",
									"items": {
										"type": "string"
									}
								},
								{
									"type": "null"
								}
							],
							"default": "energy",
							"title": "Anomaly Type"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AnomalyResponse"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				}
			}
		}
	},
	"components": {
		"schemas": {
			"Anomaly": {
				"properties": {
					"total_anomalies": {
						"type": "string",
						"title": "Total Anomalies",
						"description": "Anomaly number"
					},
					"anomalies_by_group": {
						"type": "object",
						"title": "Anomalies By Group",
						"description": "Anomalies by group"
					}
				},
				"type": "object",
				"required": [
					"total_anomalies",
					"anomalies_by_group"
				],
				"title": "Anomaly"
			},
			"AnomalyResponse": {
				"properties": {
					"success": {
						"type": "boolean",
						"title": "Success",
						"description": "Indicates if the operation was successful"
					},
					"data": {
						"anyOf": [
							{
								"items": {
									"$ref": "#/components/schemas/Anomaly"
								},
								"type": "array"
							},
							{
								"type": "null"
							}
						],
						"title": "Data",
						"description": "Anomalies data"
					},
					"message": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Message",
						"description": "Response message"
					}
				},
				"type": "object",
				"required": [
					"success",
					"data"
				],
				"title": "AnomalyResponse"
			},
			"ComputedValue": {
				"properties": {
					"value": {
						"type": "number",
						"title": "Value"
					}
				},
				"type": "object",
				"required": [
					"value"
				],
				"title": "ComputedValue"
			},
			"Configuration": {
				"properties": {
					"children": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"title": "Children",
						"default": []
					},
					"formula": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Formula"
					}
				},
				"type": "object",
				"required": [
					"formula"
				],
				"title": "Configuration"
			},
			"CreateKPIBody": {
				"properties": {
					"name": {
						"type": "string",
						"title": "Name"
					},
					"type": {
						"type": "string",
						"title": "Type"
					},
					"description": {
						"type": "string",
						"title": "Description"
					},
					"unite_of_measure": {
						"type": "string",
						"title": "Unite Of Measure"
					},
					"formula": {
						"type": "string",
						"title": "Formula"
					}
				},
				"type": "object",
				"required": [
					"name",
					"type",
					"description",
					"unite_of_measure",
					"formula"
				],
				"title": "CreateKPIBody"
			},
			"HTTPValidationError": {
				"properties": {
					"detail": {
						"items": {
							"$ref": "#/components/schemas/ValidationError"
						},
						"type": "array",
						"title": "Detail"
					}
				},
				"type": "object",
				"title": "HTTPValidationError"
			},
			"KPIDetail": {
				"properties": {
					"_id": {
						"type": "string",
						"title": " Id"
					},
					"name": {
						"type": "string",
						"title": "Name"
					},
					"type": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Type"
					},
					"description": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Description"
					},
					"unite_of_measure": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Unite Of Measure"
					},
					"config": {
						"$ref": "#/components/schemas/Configuration"
					}
				},
				"type": "object",
				"required": [
					"_id",
					"name",
					"config"
				],
				"title": "KPIDetail"
			},
			"KPIReport": {
				"properties": {
					"name": {
						"type": "string",
						"title": "Name"
					},
					"value": {
						"type": "number",
						"title": "Value"
					}
				},
				"type": "object",
				"required": [
					"name",
					"value"
				],
				"title": "KPIReport"
			},
			"KPIResponse": {
				"properties": {
					"success": {
						"type": "boolean",
						"title": "Success"
					},
					"data": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/KPIDetail"
							},
							{
								"items": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/src__plugins__kpi__schema__KPIOverview"
										},
										{
											"$ref": "#/components/schemas/ComputedValue"
										}
									]
								},
								"type": "array"
							},
							{
								"type": "null"
							}
						],
						"title": "Data"
					},
					"message": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Message"
					}
				},
				"type": "object",
				"required": [
					"success"
				],
				"title": "KPIResponse"
			},
			"MachineDetail": {
				"properties": {
					"_id": {
						"type": "string",
						"title": " Id"
					},
					"category": {
						"type": "string",
						"title": "Category"
					},
					"name": {
						"type": "string",
						"title": "Name"
					},
					"asset_id": {
						"type": "string",
						"title": "Asset Id"
					},
					"kpis_ids": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"title": "Kpis Ids"
					},
					"kpis": {
						"items": {
							"$ref": "#/components/schemas/src__plugins__kpi__schema__KPIOverview"
						},
						"type": "array",
						"title": "Kpis"
					}
				},
				"type": "object",
				"required": [
					"_id",
					"category",
					"name",
					"asset_id",
					"kpis_ids",
					"kpis"
				],
				"title": "MachineDetail"
			},
			"MachineOverview": {
				"properties": {
					"_id": {
						"type": "string",
						"title": " Id"
					},
					"category": {
						"type": "string",
						"title": "Category"
					},
					"name": {
						"type": "string",
						"title": "Name"
					},
					"asset_id": {
						"type": "string",
						"title": "Asset Id"
					},
					"kpis_ids": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"title": "Kpis Ids"
					}
				},
				"type": "object",
				"required": [
					"_id",
					"category",
					"name",
					"asset_id",
					"kpis_ids"
				],
				"title": "MachineOverview"
			},
			"MachineResponse": {
				"properties": {
					"success": {
						"type": "boolean",
						"title": "Success"
					},
					"data": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/MachineDetail"
							},
							{
								"items": {
									"$ref": "#/components/schemas/MachineOverview"
								},
								"type": "array"
							},
							{
								"type": "null"
							}
						],
						"title": "Data"
					},
					"message": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Message"
					}
				},
				"type": "object",
				"required": [
					"success"
				],
				"title": "MachineResponse"
			},
			"ReportDetail": {
				"properties": {
					"kpi_names": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"title": "Kpi Names",
						"description": "Names of the KPIs being reported"
					},
					"name": {
						"type": "string",
						"title": "Name",
						"description": "Report name"
					},
					"start_date": {
						"type": "string",
						"format": "date-time",
						"title": "Start Date",
						"description": "Start date of the report"
					},
					"end_date": {
						"type": "string",
						"format": "date-time",
						"title": "End Date",
						"description": "End date of the report"
					},
					"user_uid": {
						"type": "string",
						"title": "User Uid",
						"description": "User identifier who created the report"
					},
					"url": {
						"type": "string",
						"title": "Url",
						"description": "URL to the report"
					},
					"sites_id": {
						"items": {
							"type": "integer"
						},
						"type": "array",
						"title": "Sites Id",
						"description": "Asset identifier(s) associated with the report"
					},
					"_id": {
						"type": "string",
						"title": " Id"
					}
				},
				"type": "object",
				"required": [
					"kpi_names",
					"name",
					"user_uid",
					"url",
					"sites_id",
					"_id"
				],
				"title": "ReportDetail",
				"example": {
					"end_date": "2024-03-31T23:59:59",
					"kpi_names": [
						"some kpi"
					],
					"name": "Monthly something",
					"sites_id": [
						"12",
						"1"
					],
					"start_date": "2024-03-01T00:00:00",
					"url": "https://example.com/reports/monthly-revenue-report.pdf",
					"user_uid": "user123"
				}
			},
			"ReportOverview": {
				"properties": {
					"kpi_names": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"title": "Kpi Names",
						"description": "Names of the KPIs being reported"
					},
					"name": {
						"type": "string",
						"title": "Name",
						"description": "Report name"
					},
					"start_date": {
						"type": "string",
						"format": "date-time",
						"title": "Start Date",
						"description": "Start date of the report"
					},
					"end_date": {
						"type": "string",
						"format": "date-time",
						"title": "End Date",
						"description": "End date of the report"
					},
					"user_uid": {
						"type": "string",
						"title": "User Uid",
						"description": "User identifier who created the report"
					},
					"url": {
						"type": "string",
						"title": "Url",
						"description": "URL to the report"
					},
					"_id": {
						"type": "string",
						"title": " Id"
					},
					"sites": {
						"anyOf": [
							{
								"items": {
									"$ref": "#/components/schemas/SiteOverviewWithKPIs"
								},
								"type": "array"
							},
							{
								"type": "null"
							}
						],
						"title": "Sites",
						"description": "List of machines associated with the report"
					}
				},
				"type": "object",
				"required": [
					"kpi_names",
					"name",
					"user_uid",
					"url",
					"_id"
				],
				"title": "ReportOverview",
				"example": {
					"end_date": "2024-03-31T23:59:59",
					"kpi_names": [
						"some kpi"
					],
					"name": "Monthly something",
					"start_date": "2024-03-01T00:00:00",
					"url": "https://example.com/reports/monthly-revenue-report.pdf",
					"user_uid": "user123"
				}
			},
			"ReportResponse": {
				"properties": {
					"success": {
						"type": "boolean",
						"title": "Success",
						"description": "Indicates if the operation was successful"
					},
					"data": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/ReportDetail"
							},
							{
								"$ref": "#/components/schemas/ReportOverview"
							},
							{
								"items": {
									"$ref": "#/components/schemas/ReportDetail"
								},
								"type": "array"
							},
							{
								"items": {
									"$ref": "#/components/schemas/ReportOverview"
								},
								"type": "array"
							},
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Data",
						"description": "Response data containing report information"
					},
					"message": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Message",
						"description": "Response message"
					}
				},
				"type": "object",
				"required": [
					"success"
				],
				"title": "ReportResponse"
			},
			"RowReport": {
				"properties": {
					"start_date": {
						"type": "string",
						"format": "date-time",
						"title": "Start Date"
					},
					"end_date": {
						"type": "string",
						"format": "date-time",
						"title": "End Date"
					},
					"op": {
						"type": "string",
						"title": "Op"
					},
					"kpis": {
						"items": {
							"$ref": "#/components/schemas/KPIReport"
						},
						"type": "array",
						"title": "Kpis"
					}
				},
				"type": "object",
				"required": [
					"start_date",
					"end_date",
					"op",
					"kpis"
				],
				"title": "RowReport"
			},
			"RowReportResponse": {
				"properties": {
					"success": {
						"type": "boolean",
						"title": "Success"
					},
					"data": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/RowReport"
							},
							{
								"type": "null"
							}
						]
					},
					"message": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Message"
					}
				},
				"type": "object",
				"required": [
					"success"
				],
				"title": "RowReportResponse"
			},
			"Site": {
				"properties": {
					"_id": {
						"type": "string",
						"title": " Id"
					},
					"machines_ids": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"title": "Machines Ids",
						"default": []
					},
					"kpis_ids": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"title": "Kpis Ids",
						"default": []
					},
					"site_id": {
						"type": "integer",
						"title": "Site Id"
					}
				},
				"type": "object",
				"required": [
					"_id",
					"site_id"
				],
				"title": "Site"
			},
			"SiteOverviewWithKPIs": {
				"properties": {
					"_id": {
						"type": "string",
						"title": " Id"
					},
					"machines_ids": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"title": "Machines Ids",
						"default": []
					},
					"kpis_ids": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"title": "Kpis Ids",
						"default": []
					},
					"site_id": {
						"type": "integer",
						"title": "Site Id"
					},
					"kpis": {
						"items": {
							"$ref": "#/components/schemas/src__plugins__site__schema__KPIOverview"
						},
						"type": "array",
						"title": "Kpis"
					}
				},
				"type": "object",
				"required": [
					"_id",
					"site_id",
					"kpis"
				],
				"title": "SiteOverviewWithKPIs"
			},
			"SiteResponse": {
				"properties": {
					"success": {
						"type": "boolean",
						"title": "Success"
					},
					"data": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/Site"
							},
							{
								"items": {
									"$ref": "#/components/schemas/Site"
								},
								"type": "array"
							},
							{
								"type": "null"
							}
						],
						"title": "Data"
					},
					"message": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Message"
					}
				},
				"type": "object",
				"required": [
					"success"
				],
				"title": "SiteResponse"
			},
			"User": {
				"properties": {
					"uid": {
						"type": "string",
						"title": "Uid",
						"description": "Firebase user ID - must be a string and is required"
					},
					"email": {
						"type": "string",
						"format": "email",
						"title": "Email",
						"description": "must be a valid email string and is required"
					},
					"site": {
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "null"
							}
						],
						"title": "Site",
						"description": "must be an integer or null"
					},
					"first_name": {
						"type": "string",
						"title": "First Name",
						"description": "must be a string and is required"
					},
					"last_name": {
						"type": "string",
						"title": "Last Name",
						"description": "must be a string and is required"
					},
					"phone_number": {
						"type": "string",
						"title": "Phone Number",
						"description": "must be a string and is required"
					}
				},
				"type": "object",
				"required": [
					"uid",
					"email",
					"first_name",
					"last_name",
					"phone_number"
				],
				"title": "User"
			},
			"UserLogin": {
				"properties": {
					"email": {
						"type": "string",
						"format": "email",
						"title": "Email",
						"description": "User's email address"
					},
					"password": {
						"type": "string",
						"title": "Password",
						"description": "User's password"
					}
				},
				"type": "object",
				"required": [
					"email",
					"password"
				],
				"title": "UserLogin"
			},
			"UserResponse": {
				"properties": {
					"success": {
						"type": "boolean",
						"title": "Success"
					},
					"data": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/UserWithToken"
							},
							{
								"$ref": "#/components/schemas/User"
							},
							{
								"items": {
									"$ref": "#/components/schemas/User"
								},
								"type": "array"
							},
							{
								"type": "null"
							}
						],
						"title": "Data",
						"description": "Response data containing user information"
					},
					"message": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Message",
						"description": "Response message"
					}
				},
				"type": "object",
				"required": [
					"success"
				],
				"title": "UserResponse"
			},
			"UserWithToken": {
				"properties": {
					"uid": {
						"type": "string",
						"title": "Uid",
						"description": "Firebase user ID - must be a string and is required"
					},
					"email": {
						"type": "string",
						"format": "email",
						"title": "Email",
						"description": "must be a valid email string and is required"
					},
					"site": {
						"anyOf": [
							{
								"type": "integer"
							},
							{
								"type": "null"
							}
						],
						"title": "Site",
						"description": "must be an integer or null"
					},
					"first_name": {
						"type": "string",
						"title": "First Name",
						"description": "must be a string and is required"
					},
					"last_name": {
						"type": "string",
						"title": "Last Name",
						"description": "must be a string and is required"
					},
					"phone_number": {
						"type": "string",
						"title": "Phone Number",
						"description": "must be a string and is required"
					},
					"id_token": {
						"type": "string",
						"title": "Id Token",
						"description": "Authentication token"
					}
				},
				"type": "object",
				"required": [
					"uid",
					"email",
					"first_name",
					"last_name",
					"phone_number",
					"id_token"
				],
				"title": "UserWithToken"
			},
			"ValidationError": {
				"properties": {
					"loc": {
						"items": {
							"anyOf": [
								{
									"type": "string"
								},
								{
									"type": "integer"
								}
							]
						},
						"type": "array",
						"title": "Location"
					},
					"msg": {
						"type": "string",
						"title": "Message"
					},
					"type": {
						"type": "string",
						"title": "Error Type"
					}
				},
				"type": "object",
				"required": [
					"loc",
					"msg",
					"type"
				],
				"title": "ValidationError"
			},
			"src__plugins__kpi__schema__KPIOverview": {
				"properties": {
					"_id": {
						"type": "string",
						"title": " Id"
					},
					"name": {
						"type": "string",
						"title": "Name"
					},
					"type": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Type"
					},
					"description": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Description"
					},
					"unite_of_measure": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "null"
							}
						],
						"title": "Unite Of Measure"
					}
				},
				"type": "object",
				"required": [
					"_id",
					"name"
				],
				"title": "KPIOverview"
			},
			"src__plugins__site__schema__KPIOverview": {
				"properties": {
					"_id": {
						"type": "string",
						"title": " Id"
					},
					"name": {
						"type": "string",
						"title": "Name"
					}
				},
				"type": "object",
				"required": [
					"_id",
					"name"
				],
				"title": "KPIOverview"
			}
		},
		"securitySchemes": {
			"HTTPBearer": {
				"type": "http",
				"scheme": "bearer"
			}
		}
	}
}